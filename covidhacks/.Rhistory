covid_keycountries_counts_pivoted
View(covid_combined)
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts %>% pivot_longer(cols = - c('Date'), names_to = 'Region', values_to = 'Confirmed') %>% ggplot() + geom_line(aes(x = Date, y = Confirmed, color = Region) )
covid_keycountries_counts
covid_combined <- as_tibble(read_csv(file =  "https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv"))
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts <- covid_keycountries_counts %>% rename(United_States = US)
covid_keycountries_counts_pivoted <- covid_keycountries_counts %>%
pivot_longer(cols = - c("Date"),
names_to = "Regions",
values_to = "Confirmed Counts")
# get death counts of key countries
keycountries <- covid_keycountries_counts_pivoted$Regions %>% unique()
# rank confirmed counts (also available for cross-checking on 'https://www.worldometers.info/coronavirus/#countries')
mostrecent <- max(covid_keycountries_counts$Date)
ranking_confirmed <- covid_keycountries_counts_pivoted %>%
filter(Date == mostrecent) %>%
select(c(Regions, `Confirmed Counts`)) %>%
arrange( desc(`Confirmed Counts`) ) %>%
pull('Regions')
# reorder columns in decreasing order:
covid_keycountries_counts <- covid_keycountries_counts %>% select(c(Date, ranking_confirmed))
covid_keycountries_counts_pivoted$Regions <- covid_keycountries_counts_pivoted$Regions %>% factor(labels = ranking_confirmed)
covid_keycountries_counts %>% pivot_longer(cols = - c('Date'), names_to = 'Region', values_to = 'Confirmed') %>% ggplot() + geom_line(aes(x = Date, y = Confirmed, color = Region) )
ggplot() + geom_line(aes(x = Date, y = `Confirmed Counts`, color = Region))
covid_keycountries_counts_pivoted
ggplot() + geom_line(aes(x = 'Date', y
oted %>%   ggplot() + geom_line(aes(x = 'Date', y = `Confirmed Counts`, color = Region))
covid_keycountries_counts_pivoted %>%   ggplot() + geom_line(aes(x = Date, y = `Confirmed Counts`, color = Region))
covid_keycountries_counts_pivoted %>%   ggplot() + geom_line(aes(x = Date, y = `Confirmed Counts`, color = Regions))
/time-series-19-covid-combined.csv"))
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts <- covid_keycountries_counts %>% rename(United_States = US)
covid_keycountries_counts_pivoted <- covid_keycountries_counts %>%
pivot_longer(cols = - c("Date"),
names_to = "Regions",
values_to = "Confirmed Counts")
# get death counts of key countries
keycountries <- covid_keycountries_counts_pivoted$Regions %>% unique()
# rank confirmed counts (also available for cross-checking on 'https://www.worldometers.info/coronavirus/#countries')
mostrecent <- max(covid_keycountries_counts$Date)
ranking_confirmed <- covid_keycountries_counts_pivoted %>%
filter(Date == mostrecent) %>%
select(c(Regions, `Confirmed Counts`)) %>%
arrange( desc(`Confirmed Counts`) ) %>%
pull('Regions')
# reorder columns in decreasing order:
covid_keycountries_counts <- covid_keycountries_counts %>% select(c(Date, ranking_confirmed))
covid_keycountries_counts_pivoted$Regions <- covid_keycountries_counts_pivoted$Regions %>% factor(labels = ranking_confirmed)
covid_combined <- as_tibble(read_csv(file =  "https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv"))
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts <- covid_keycountries_counts %>% rename(United_States = US)
covid_keycountries_counts_pivoted <- covid_keycountries_counts %>%
pivot_longer(cols = - c("Date"),
names_to = "Regions",
values_to = "Confirmed Counts")
# get death counts of key countries
keycountries <- covid_keycountries_counts_pivoted$Regions %>% unique()
# rank confirmed counts (also available for cross-checking on 'https://www.worldometers.info/coronavirus/#countries')
mostrecent <- max(covid_keycountries_counts$Date)
ranking_confirmed <- covid_keycountries_counts_pivoted %>%
filter(Date == mostrecent) %>%
select(c(Regions, `Confirmed Counts`)) %>%
arrange( desc(`Confirmed Counts`) ) %>%
pull('Regions')
# reorder columns in decreasing order:
covid_keycountries_counts <- covid_keycountries_counts %>% select(c(Date, ranking_confirmed))
covid_keycountries_counts_pivoted$Regions <- covid_keycountries_counts_pivoted$Regions %>% factor(labels = ranking_confirmed)
covid_keycountries_counts_pivoted %>%   ggplot() + geom_line(aes(x = Date, y = `Confirmed Counts`, color = Regions))
View(covid_keycountries_counts_pivoted)
View(covid_keycountries_counts)
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date,
y = ~ `United_States`,
mode = 'lines'
)
fig
keycountries
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date,
y = ~ `United_States`,
mode = 'lines'
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
x = ~ Date,
y = ~ rgn,
mode = 'lines'
)
}
fig
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date,
y = ~ `United_States`,
mode = 'lines'
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
x = ~ covid_keycountries_counts$Date,
y = ~ covid_keycountries_counts$rgn,
mode = 'lines'
)
}
fig
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date,
y = ~ `United_States`,
mode = 'lines'
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
x = ~ covid_keycountries_counts$Date,
y = ~ covid_keycountries_counts[[rgn]],
mode = 'lines'
)
}
fig
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date,
y = ~ `United_States`,
mode = 'lines'
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
data =  covid_keycountries_counts,
x = ~ Date,
y = ~ rgn,
mode = 'lines'
)
}
fig
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date,
y = ~ `United_States`,
mode = 'lines'
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
data =  covid_keycountries_counts,
y = ~ rgn,
mode = 'lines'
)
}
fig
covid_keycountries_counts$rgn
rgn
covid_keycountries_counts$Iran
names(covid_keycountries_counts_pivoted)
library(readr)
library(httr)
library(tidyverse)
library(lubridate)
covid_combined <- as_tibble(read_csv(file =  "https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv"))
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts_pivoted <- covid_keycountries_counts %>%
pivot_longer(cols = - c("Date"),
names_to = "Regions",
values_to = "Confirmed Counts")
# get death counts of key countries
keycountries <- covid_keycountries_counts_pivoted$Regions %>% unique()
# rank confirmed counts (also available for cross-checking on 'https://www.worldometers.info/coronavirus/#countries')
mostrecent <- max(covid_keycountries_counts$Date)
ranking_confirmed <- covid_keycountries_counts_pivoted %>%
filter(Date == mostrecent) %>%
select(c(Regions, `Confirmed Counts`)) %>%
arrange( desc(`Confirmed Counts`) ) %>%
pull('Regions')
# reorder columns in decreasing order:
covid_keycountries_counts <- covid_keycountries_counts %>% select(c(Date, ranking_confirmed))
covid_keycountries_counts_pivoted$Regions <- covid_keycountries_counts_pivoted$Regions %>% factor(labels = ranking_confirmed)
covid_keycountries_counts_pivoted %>% ggplot() + geom_line(aes(x = Date, y = `Confirmed Counts`, color = Regions))
# covidhacks Dash + Plotly
library(plotly)
library(dash)
library(dashCoreComponents)
library(dashHtmlComponents)
library(readr)
library(httr)
library(tidyverse)
library(lubridate)
library(kableExtra)
td <- Sys.Date()
## fetch data from DataHub
covid_combined <- as_tibble(read_csv(file =  "https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv"))
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts <- covid_keycountries_counts %>% rename(United_States = US)
covid_keycountries_counts_pivoted <- covid_keycountries_counts %>%
pivot_longer(cols = - c("Date"),
names_to = "Regions",
values_to = "Confirmed Counts")
# get death counts of key countries
keycountries <- covid_keycountries_counts_pivoted$Regions %>% unique()
# rank confirmed counts (also available for cross-checking on 'https://www.worldometers.info/coronavirus/#countries')
mostrecent <- max(covid_keycountries_counts$Date)
ranking_confirmed <- covid_keycountries_counts_pivoted %>%
filter(Date == mostrecent) %>%
select(c(Regions, `Confirmed Counts`)) %>%
arrange( desc(`Confirmed Counts`) ) %>%
pull('Regions')
# reorder columns in decreasing order:
covid_keycountries_counts <- covid_keycountries_counts %>% select(c(Date, ranking_confirmed))
covid_keycountries_counts_pivoted$Regions <- covid_keycountries_counts_pivoted$Regions %>% factor(labels = ranking_confirmed)
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date,
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
data =  covid_keycountries_counts,
y = ~ rgn,
mode = 'lines'
)
}
fig
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
data =  covid_keycountries_counts,
y = ~ rgn,
mode = 'lines'
)
}
fig
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
y = ~ rgn,
mode = 'lines'
)
}
fig
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ Date
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
y = ~ rgn,
mode = 'lines+markers'
)
}
fig
x
covid_keycountries_counts$Date
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ ymd(Date)
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
y = ~ rgn,
mode = 'lines+markers'
)
}
fig
covid_keycountries_counts %>% pull(Date) %>% ymd()
covid_keycountries_counts %>% pull(Date) %>% ymd() - 1
covid_keycountries_counts %>% pull(Date) %>% ymd() %>% as.Date()
fig <- covid_keycountries_counts %>% plot_ly(
x = ~ ymd(Date) %>% as.Date()
)
for (rgn in keycountries) {
fig <- fig %>% add_trace(
y = ~ rgn,
mode = 'lines+markers'
)
}
fig
covid_keycountries_counts_pivoted %>% names()
covid_keycountries_counts_pivoted %>%
plotly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions
)
owo <- covid_keycountries_counts_pivoted %>%
plotly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions
)
owo
owo <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions
)
owo
owo <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
lines = ~ Regions
)
owo
owo <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines+markers'
)
owo
owo <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
)
owo
covid_keycountries_counts_pivoted %>% names()
covid_keycountries_counts_pivoted %>% pull(Regions)
covid_keycountries_counts <- covid_keycountries_counts %>% select(c(Date, ranking_confirmed))
covid_keycountries_counts_pivoted
# covidhacks Dash + Plotly
library(plotly)
library(dash)
library(dashCoreComponents)
library(dashHtmlComponents)
library(readr)
library(httr)
library(tidyverse)
library(lubridate)
library(kableExtra)
td <- Sys.Date()
## fetch data from DataHub
covid_combined <- as_tibble(read_csv(file =  "https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv"))
covid_keycountries_counts <- as_tibble( read_csv("https://datahub.io/core/covid-19/r/key-countries-pivoted.csv") )
covid_keycountries_counts <- covid_keycountries_counts %>% rename(United_States = US)
covid_keycountries_counts_pivoted <- covid_keycountries_counts %>%
pivot_longer(cols = - c("Date"),
names_to = "Regions",
values_to = "Confirmed Counts")
# get death counts of key countries
keycountries <- covid_keycountries_counts_pivoted$Regions %>% unique()
# rank confirmed counts (also available for cross-checking on 'https://www.worldometers.info/coronavirus/#countries')
mostrecent <- max(covid_keycountries_counts$Date)
ranking_confirmed <- covid_keycountries_counts_pivoted %>%
filter(Date == mostrecent) %>%
select(c(Regions, `Confirmed Counts`)) %>%
arrange( desc(`Confirmed Counts`) ) %>%
pull('Regions')
# reorder columns in decreasing order:
covid_keycountries_counts <- covid_keycountries_counts %>% select(c(Date, ranking_confirmed))
# covid_keycountries_counts_pivoted$Regions <- covid_keycountries_counts_pivoted$Regions %>% factor(labels = ranking_confirmed)
# fig <- covid_keycountries_counts %>% plot_ly(
#   x = ~ ymd(Date) %>% as.Date()
# )
#
# for (rgn in keycountries) {
#   fig <- fig %>% add_trace(
#     y = ~ rgn,
#     mode = 'lines+markers'
#   )
# }
#
# fig
owo <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
)
owo
covid_combined$Deaths %>% sum()
covid_combined$Deaths %>% tail(1)
covid_combined$Deaths
covid_combined
covid_combined %>% filter(Date == max(Date))
covid_combined %>% filter(Date == max(Date)) %>% pull(Deaths) %>% sum()
covid_combined %>% filter(Date == max(Date)) %>% pull(`Country/Region`)
region <- "US" # from drop-down
death_list <- covid_combined %>%
filter(Data == max(Date)) %>%
filter(`Country/Region` == region)
source('~/covid-19/covidhacks/app.R', echo=TRUE)
# death_list <-
covid_combined %>%
filter(Date == max(Date)) %>%
filter(`Country/Region` == region)
region <- "United Kingdom" # from drop-down
mbined %>%
filter(Date == max(Date)) %>%
filter(`Country/Region` == region)
ovid_combined %>%
filter(Date == max(Date)) %>%
filter(`Country/Region` == region)
covid_combined %>%
filter(Date == max(Date)) %>%
filter(`Country/Region` == region)
region <- "United Kingdom" # from drop-down
Ndeaths <- covid_combined %>%
filter(Date == max(Date)) %>%
filter(`Country/Region` == region) %>%
pull(Deaths) %>% sum()
Ndeaths
rgn.vec <- covid_combined %>% pull(`Country/Region`) %>% unique()
rgn.vec
Orange
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 100, y = 0.5))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0.1, y = 0.5))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0.1, y = 0.9))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0, y = 1))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0, y = 1, size = 8))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0, y = 1, font = list(size = 8), bgcolor = "#E2E2E2"))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0, y = 1, font = list(size = 8), bgcolor = "#B2B2B2"))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0, y = 1, font = list(size = 8), bgcolor = "#F2F2F2"))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines+markers'
) %>% layout(legend = list(x = 0, y = 1, font = list(size = 8), bgcolor = "#F2F2F2"))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
markers = ~ Regions,
mode = 'lines+markers'
) %>% layout(legend = list(x = 0, y = 1, font = list(size = 8), bgcolor = "#F2F2F2"))
plotConfirmed
plotConfirmed <- covid_keycountries_counts_pivoted %>%
plot_ly(
x = ~ Date,
y = ~ `Confirmed Counts`,
color = ~ Regions,
mode = 'lines'
) %>% layout(legend = list(x = 0, y = 1, font = list(size = 8), bgcolor = "#F2F2F2"))
plotConfirmed
T
source('~/covid-19/covidhacks/app.R', echo=TRUE)
source('~/covid-19/covidhacks/app.R', echo=TRUE)
source('~/covid-19/covidhacks/app.R', echo=TRUE)
source('~/covid-19/covidhacks/app.R', echo=TRUE)
??htmlLabel
source('~/covid-19/covidhacks/app.R', echo=TRUE)
source('~/covid-19/covidhacks/app.R', echo=TRUE)
regions.vec
keycountries
ranking_confirmed
source('~/covid-19/covidhacks/dashr-practice/app.R', echo=TRUE)
??sprintf
source('~/covid-19/covidhacks/dashr-practice/app.R', echo=TRUE)
source('~/covid-19/covidhacks/dashr-practice/app.R', echo=TRUE)
source('~/covid-19/covidhacks/dashr-practice/app.R', echo=TRUE)
source('~/covid-19/covidhacks/dashr-practice/app.R', echo=TRUE)
source('~/covid-19/covidhacks/dashr-practice/app.R', echo=TRUE)
